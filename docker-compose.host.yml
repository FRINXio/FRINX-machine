version: "3.7"

x-extra_hosts: &extra_hosts_entries
        - "conductor-server:127.0.0.1"
        - "uniconfig:127.0.0.1"
        - "micros:127.0.0.1"
        - "dynomite:127.0.0.1"
        - "dyno1:127.0.0.1"
        - "elasticsearch:127.0.0.1"
        - "es:127.0.0.1"
        - "kibana:127.0.0.1"
        - "logstash:127.0.0.1"
        - "uniflow-ui:127.0.0.1"
        - "uniflow-api:127.0.0.1"
        - "uniconfig-ui:127.0.0.1"
        - "uniconfig-api:127.0.0.1"
        - "dashboard:127.0.0.1"
        - "api-gateway:127.0.0.1"
        - "portainer:127.0.0.1"
        - "conductor-server:::1"
        - "uniconfig:::1"
        - "micros:::1"
        - "dynomite:::1"
        - "dyno1:::1"
        - "elasticsearch:::1"
        - "es:::1"
        - "kibana:::1"
        - "logstash:::1"
        - "uniflow-ui:::1"
        - "uniflow-api:::1"
        - "uniconfig-ui:::1"
        - "uniconfig-api:::1"
        - "dashboard:::1"
        - "api-gateway:::1"
        - "portainer:::1"

services:
  uniconfig:
    tty: true
    build:
      context: uniconfig
      dockerfile: Dockerfile
    image: frinx/fm-uniconfig:${RELEASE_VERSION}
    logging:
        driver: "json-file"
        options:
            max-file: "3"
            max-size: "10m"
    container_name: uniconfig
    environment:
      - JAVA_MAX_MEM=4G
      - TOKEN=${TOKEN}
    volumes:
       - uniconfig_logs:/opt/uniconfig-frinx/log
       - uniconfig_pass:/opt/uniconfig-frinx/db-credentials
       - uniconfig_data:/opt/uniconfig-frinx/data
    ports:
      - 8181:8181
    network_mode: "host"
    extra_hosts: *extra_hosts_entries

  micros:
    build:
      context: ./
      dockerfile: ./microservices/Dockerfile
    image: frinx/fm-micros:${RELEASE_VERSION}
    logging:
        driver: "json-file"
        options:
            max-file: "3"
            max-size: "10m"
    container_name: micros
    depends_on:
      - uniconfig
      - conductor-server
    network_mode: "host"
    extra_hosts: *extra_hosts_entries
    command: ["/home/app/wait_for_it.sh", "-t", "180",  "conductor-server:8080", "--", "python", "/home/app/netinfra_utils/workers/main.py"]
    volumes:
        - uniconfig_pass:/opt/uniconfig_pass:ro

  conductor-server:
    build:
      context: ./conductor/
      dockerfile: docker/server/Dockerfile
    environment:
      - CONFIG_PROP=config.properties
    image: frinx/fm-conductor-server:${RELEASE_VERSION}
    container_name: conductor-server
    logging:
        driver: "json-file"
        options:
            max-file: "3"
            max-size: "10m"
    ports:
      - 8080:8080
      - 8000:8000
    depends_on:
      - dynomite
      - elasticsearch
    network_mode: "host"
    extra_hosts: *extra_hosts_entries
    command: ["/app/wait_for.sh", "-t", "120",  "elasticsearch:9300", "--", "/app/startup.sh"]

  dynomite:
    logging:
        driver: "json-file"
        options:
            max-file: "3"
            max-size: "10m"
    build:
      context: ./
      dockerfile: ./dynomite/Dockerfile
    image: frinx/fm-dynomite:${RELEASE_VERSION}
    container_name: dynomite
    ports:
       - 8102:8102
    volumes:
       - redis_data:/var/lib/redis
    network_mode: "host"
    extra_hosts: *extra_hosts_entries

  postgresql:
    image: postgres:12.2
    container_name: postgresql
    logging:
        driver: "json-file"
        options:
            max-file: "3"
            max-size: "10m"
    environment:
      - POSTGRES_PASSWORD=frinx
      - POSTGRES_USER=postgres
      - POSTGRES_DB=frinx
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
       - postgresql_data:/var/lib/postgresql/data
    network_mode: "host"

  elasticsearch:
    build:
      context: ./
      dockerfile: ./elasticsearch/Dockerfile
    image: frinx/fm-elasticsearch:${RELEASE_VERSION}
    container_name: elasticsearch
    logging:
        driver: "json-file"
        options:
            max-file: "3"
            max-size: "10m"
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms512m -Xmx1024m"
    volumes:
       - elastic_data:/usr/share/elasticsearch/data
    healthcheck:
        test: ["CMD", "curl", "-IGET", "http://localhost:9200"]
        interval: 2s
        timeout: 6s
        retries: 1
    network_mode: "host"
    extra_hosts: *extra_hosts_entries

  kibana:
    logging:
        driver: "json-file"
        options:
            max-file: "3"
            max-size: "10m"
    build:
      context: ./kibana
      dockerfile: Dockerfile
    image: frinx/fm-kibana:${RELEASE_VERSION}
    container_name: kibana
    environment:
      - "NODE_HOST=::"
      - "elasticsearch.url=http://elasticsearch:9200"
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    network_mode: "host"
    extra_hosts: *extra_hosts_entries

  logstash:
    build:
      context: ./logstash
      dockerfile: Dockerfile
    image: frinx/fm-logstash:${RELEASE_VERSION}
    logging:
        driver: "json-file"
        options:
            max-file: "3"
            max-size: "10m"
    container_name: logstash
    volumes:
       - uniconfig_logs:/uniconfig-logs:ro
    network_mode: "host"
    extra_hosts: *extra_hosts_entries

  uniconfig-ui:
    build:
      context: ./frinx-uniconfig-ui
      dockerfile: Dockerfile
    image: frinx/fm-uniconfig-ui:${RELEASE_VERSION}
    container_name: uniconfig-ui
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "10m"
    ports:
      - 4000:4000
    network_mode: "host"
    extra_hosts: *extra_hosts_entries
 
  uniconfig-api:
    build:
      context: ./frinx-uniconfig-ui/api
      dockerfile: Dockerfile
    image: frinx/fm-uniconfig-api:${RELEASE_VERSION}
    environment:
        - UNICONFIG_HOST=uniconfig:8181
    container_name: uniconfig-api
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "10m"
    ports:
      - 4001:4001
    depends_on: 
      - uniconfig
    network_mode: "host"
    extra_hosts: *extra_hosts_entries
 
  uniflow-ui:
    build:
      context: ./uniflow-ui
      dockerfile: Dockerfile
    image: frinx/fm-uniflow-ui:${RELEASE_VERSION}
    container_name: uniflow-ui
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "10m"
    ports:
      - 3000:3000
    network_mode: "host"
    extra_hosts: *extra_hosts_entries
 
  uniflow-api:
    build:
      context: ./uniflow-api
      dockerfile: Dockerfile
    image: frinx/fm-uniflow-api:${RELEASE_VERSION}
    environment:
        - CONDUCTOR_HOST=conductor-server:8080/api/
    container_name: uniflow-api
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "10m"
    ports:
      - 3001:3001
    depends_on: 
      - conductor-server
    network_mode: "host"
    extra_hosts: *extra_hosts_entries
 
  dashboard:
    build:
      context: ./frinx-dashboard
      dockerfile: Dockerfile
    image: frinx/fm-dashboard:${RELEASE_VERSION}
    container_name: dashboard
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "10m"
    ports:
      - 5001:5001
    network_mode: "host"
    extra_hosts: *extra_hosts_entries
 
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    image: frinx/fm-api-gateway:${RELEASE_VERSION}
    environment:
        - API_GATEWAY_HOST=api-gateway:5000
        - DASHBOARD_HOST=dashboard:5001
        - UNIFLOW_UI_HOST=uniflow-ui:3000
        - UNIFLOW_API_HOST=uniflow-api:3001
        - UNICONFIG_UI_HOST=uniconfig-ui:4000
        - UNICONFIG_API_HOST=uniconfig-api:4001
    container_name: api-gateway
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "10m"
    ports:
      - 5000:5000
    depends_on: 
      - dashboard
      - uniflow-ui
      - uniflow-api
      - uniconfig-ui
      - uniconfig-api
    network_mode: "host"
    extra_hosts: *extra_hosts_entries

  portainer:
    build:
      context: ./
      dockerfile: ./portainer/Dockerfile
    image: frinx/fm-portainer:${RELEASE_VERSION}
    container_name: portainer
    restart: always
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "10m"
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9000:9000
    network_mode: "host"
    extra_hosts: *extra_hosts_entries

volumes:
  redis_data:
    name: redis_data
  elastic_data:
    name: elastic_data
  uniconfig_logs:
    name: uniconfig_logs
  uniconfig_pass:
      name: uniconfig_pass
  uniconfig_data:
      name: uniconfig_data
  portainer_data:
      name: portainer_data
  postgresql_data:
      name: postgresql_data
      
networks:
  default:
    name: FRINX-machine
      
