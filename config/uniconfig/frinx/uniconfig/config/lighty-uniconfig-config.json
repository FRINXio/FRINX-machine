{
    "controller":{
        "restoreDirectoryPath":"./clustered-datastore-restore",
        "maxDataBrokerFutureCallbackQueueSize":1000,
        "maxDataBrokerFutureCallbackPoolSize":10,
        "configurationDatastoreContext": {
            "maximumMessageSliceSize":1024000,
            "useTellBasedProtocol": true,
            "frontendRequestTimeoutInSeconds":300,
            "shardTransactionCommitTimeoutInSeconds":120,
            "backendAlivenessTimerIntervalInSeconds":120,
            "shardLeaderElectionTimeout":60000,
            "shardInitializationTimeout":60000,
            "operationTimeoutInMillis": 300000,
            "syncIndexThreshold":100,
            "shardHeartbeatIntervalInMillis":1000,
            "shardTransactionIdleTimeout": 600000,
            "shardJournalRecoveryLogBatchSize": 1,
            "shardSnapshotBatchCount": 20000,
            "shardSnapshotDataThresholdPercentage": 12,
            "shardTransactionCommitQueueCapacity": 50000,
            "persistent": false,
            "shardBatchedModificationCount": 1,
            "shardCommitQueueExpiryTimeoutInMillis": 120000,
            "transactionDebugContextEnabled": false,
            "maxShardDataChangeExecutorPoolSize": 20,
            "maxShardDataChangeExecutorQueueSize": 1000,
            "maxShardDataChangeListenerQueueSize": 1000,
            "maxShardDataStoreExecutorQueueSize": 5000,
            "fileBackedStreamingThresholdInMegabytes": 128,
            "frontendNoProgressTimeoutInSeconds": 900
        },
        "operationalDatastoreContext": {
            "maximumMessageSliceSize":1024000,
            "useTellBasedProtocol": true,
            "frontendRequestTimeoutInSeconds":300,
            "shardTransactionCommitTimeoutInSeconds":120,
            "backendAlivenessTimerIntervalInSeconds":120,
            "shardLeaderElectionTimeout":60000,
            "shardInitializationTimeout":60000,
            "operationTimeoutInMillis": 300000,
            "syncIndexThreshold":100,
            "shardHeartbeatIntervalInMillis":1000,
            "shardTransactionIdleTimeout": 600000,
            "shardJournalRecoveryLogBatchSize": 1,
            "shardSnapshotBatchCount": 20000,
            "shardSnapshotDataThresholdPercentage": 12,
            "shardTransactionCommitQueueCapacity": 50000,
            "persistent": false,
            "shardBatchedModificationCount": 1,
            "shardCommitQueueExpiryTimeoutInMillis": 120000,
            "transactionDebugContextEnabled": false,
            "maxShardDataChangeExecutorPoolSize": 20,
            "maxShardDataChangeExecutorQueueSize": 1000,
            "maxShardDataChangeListenerQueueSize": 1000,
            "maxShardDataStoreExecutorQueueSize": 5000,
            "fileBackedStreamingThresholdInMegabytes": 128,
            "frontendNoProgressTimeoutInSeconds": 900
        },
        "metricCaptureEnabled":false,
        "mailboxCapacity":1000,
        "moduleShardsConfig": "config/module-shards.conf",
        "modulesConfig": "config/modules.conf",
        "domNotificationRouterConfig":{
            "queueDepth":65536,
            "spinTime":0,
            "parkTime":0,
            "unit":"MILLISECONDS"
        },
        "actorSystemConfig":{
            "akkaConfigPath":"config/akka.conf",
            "factoryAkkaConfigPath":"config/factory-akka.conf"
        },
        "schemaServiceConfig":{
            "topLevelModules":[]
        }
    },
    "restconf":{
        "httpPort":8181,
        "inetAddress":"0.0.0.0",
        "webSocketPort": 8185,
        "restconfServletContextPath":"/rests",
        "jsonRestconfServiceType": "DRAFT_18",
        "streamConfiguration" : {
            "maximumFragmentLength" : 0,
            "idleTimeout" : 30000,
            "heartbeatInterval" : 10000,
            "useSSE" : false
        }
    },
    "daexim": {
        "daeximDirectory": "daexim"
    },
    /*
    DB persistence settings via environment variables.
    Environment variables override settings from JSON config part.

    dbPersistence_enabled=false
    dbPersistence_connection_dbName=uniconfig
    dbPersistence_connection_username=uniremote
    dbPersistence_connection_password=unipass
    dbPersistence_connection_initialDbPoolSize=5
    dbPersistence_connection_maxDbPoolSize=10
    dbPersistence_connection_maxIdleConnections=5
    dbPersistence_connection_maxWaitTime=30000
    dbPersistence_connection_enabledTls=false
    dbPersistence_connection_tlsClientCert=./client.pks
    dbPersistence_connection_tlsClientKey=./client.key
    dbPersistence_connection_tlsCaCert=./ca.pks
    dbPersistence_connection_databaseLocations_host=127.0.0.1
    dbPersistence_connection_databaseLocations_port=26257
    dbPersistence_uniconfigInstance_instanceName=uc-0
    */
    "dbPersistence": {
        "embeddedDatabase": {
            // Flag that determines if embedded database will be started or not.
            "enabled": false,
            // A parameter that specifies the name of the subdirectory in which the embedded database is stored.
            "dataDir": "./data/pg_dir",
            // A parameter that determines if the 'dataDir' directory will be deleted after uniconfig is turned off.
            "cleanDataDir": true
        },
        "connection": {
            "dbName": "uniconfig",
            "username": "uniremote",
            "password": "unipass",
            "initialDbPoolSize": 5,
            "maxDbPoolSize": 10,
            "maxIdleConnections": 5,
            "maxWaitTime": 30000,
            "enabledTls": false,
            "tlsClientCert": "./client.pks", // relative path from uniconfig main folder
            "tlsClientKey": "./client.key", // relative path from uniconfig main folder
            "tlsCaCert": "./ca.pks", // relative path from uniconfig main folder
            "databaseLocations": [
                {
                    "host": "127.0.0.1",
                    "port": 26257
                }
            ]
        },
        "uniconfigInstance": {
            "instanceName": "uc-0",
            "backupInstanceName": null
        },
        "monitoring": {
            "heartbeatInterval": 1000,
            "initialMonitoringDelay": 5000,
            "backupMonitoringInterval": 10000,
            "maxInstanceAge": 5000
        }
    },
    "tls": {
        "enabledTls": true,
        "enabledClientAuthentication": false,
        "keystorePath": "config/.keystore",
        "keystorePassword": "password"
    }
}